{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#                      Data Analysis with Python"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##                          Topic - StackOverflow Developer Survey 2018"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Group 5: Aditi Tupsakhare, Dhruvi Desai, Kesha Shah"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "%pylab inline\n",
    "\n",
    "import sklearn as sk\n",
    "import sklearn.tree as tree\n",
    "from IPython.display import Image  \n",
    "import pydotplus\n",
    "\n",
    "import plotly\n",
    "import plotly.plotly as py\n",
    "from plotly.graph_objs import *\n",
    "\n",
    "#It is necessary to create a plotly account and get an api_key\n",
    "plotly.tools.set_credentials_file(username='atupsakhare', api_key='QaI5nhqVZCAC2OYLc7mU')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Respondent', 'Hobby', 'OpenSource', 'Country', 'Student',\n",
       "       'Employment', 'FormalEducation', 'UndergradMajor', 'CompanySize',\n",
       "       'DevType', 'YearsCoding', 'YearsCodingProf', 'JobSatisfaction',\n",
       "       'CareerSatisfaction', 'HopeFiveYears', 'JobSearchStatus',\n",
       "       'LastNewJob', 'AssessJob1', 'AssessJob2', 'AssessJob3',\n",
       "       'AssessJob4', 'AssessJob5', 'AssessJob6', 'AssessJob7',\n",
       "       'AssessJob8', 'AssessJob9', 'AssessJob10', 'AssessBenefits1',\n",
       "       'AssessBenefits2', 'AssessBenefits3', 'AssessBenefits4',\n",
       "       'AssessBenefits5', 'AssessBenefits6', 'AssessBenefits7',\n",
       "       'AssessBenefits8', 'AssessBenefits9', 'AssessBenefits10',\n",
       "       'AssessBenefits11', 'JobContactPriorities1',\n",
       "       'JobContactPriorities2', 'JobContactPriorities3',\n",
       "       'JobContactPriorities4', 'JobContactPriorities5',\n",
       "       'JobEmailPriorities1', 'JobEmailPriorities2',\n",
       "       'JobEmailPriorities3', 'JobEmailPriorities4',\n",
       "       'JobEmailPriorities5', 'JobEmailPriorities6',\n",
       "       'JobEmailPriorities7', 'UpdateCV', 'Currency', 'Salary',\n",
       "       'SalaryType', 'ConvertedSalary', 'CurrencySymbol',\n",
       "       'CommunicationTools', 'TimeFullyProductive', 'EducationTypes',\n",
       "       'SelfTaughtTypes', 'TimeAfterBootcamp', 'HackathonReasons',\n",
       "       'AgreeDisagree1', 'AgreeDisagree2', 'AgreeDisagree3',\n",
       "       'LanguageWorkedWith', 'LanguageDesireNextYear',\n",
       "       'DatabaseWorkedWith', 'DatabaseDesireNextYear',\n",
       "       'PlatformWorkedWith', 'PlatformDesireNextYear',\n",
       "       'FrameworkWorkedWith', 'FrameworkDesireNextYear', 'IDE',\n",
       "       'OperatingSystem', 'NumberMonitors', 'Methodology',\n",
       "       'VersionControl', 'CheckInCode', 'AdBlocker', 'AdBlockerDisable',\n",
       "       'AdBlockerReasons', 'AdsAgreeDisagree1', 'AdsAgreeDisagree2',\n",
       "       'AdsAgreeDisagree3', 'AdsActions', 'AdsPriorities1',\n",
       "       'AdsPriorities2', 'AdsPriorities3', 'AdsPriorities4',\n",
       "       'AdsPriorities5', 'AdsPriorities6', 'AdsPriorities7',\n",
       "       'AIDangerous', 'AIInteresting', 'AIResponsible', 'AIFuture',\n",
       "       'EthicsChoice', 'EthicsReport', 'EthicsResponsible',\n",
       "       'EthicalImplications', 'StackOverflowRecommend',\n",
       "       'StackOverflowVisit', 'StackOverflowHasAccount',\n",
       "       'StackOverflowParticipate', 'StackOverflowJobs',\n",
       "       'StackOverflowDevStory', 'StackOverflowJobsRecommend',\n",
       "       'StackOverflowConsiderMember', 'HypotheticalTools1',\n",
       "       'HypotheticalTools2', 'HypotheticalTools3', 'HypotheticalTools4',\n",
       "       'HypotheticalTools5', 'WakeTime', 'HoursComputer', 'HoursOutside',\n",
       "       'SkipMeals', 'ErgonomicDevices', 'Exercise', 'Gender',\n",
       "       'SexualOrientation', 'EducationParents', 'RaceEthnicity', 'Age',\n",
       "       'Dependents', 'MilitaryUS', 'SurveyTooLong', 'SurveyEasy'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('survey_results_public.csv', low_memory= False)\n",
    "\n",
    "df.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Respondent</th>\n",
       "      <th>Hobby</th>\n",
       "      <th>OpenSource</th>\n",
       "      <th>Country</th>\n",
       "      <th>Student</th>\n",
       "      <th>Employment</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>UndergradMajor</th>\n",
       "      <th>CompanySize</th>\n",
       "      <th>DevType</th>\n",
       "      <th>...</th>\n",
       "      <th>Exercise</th>\n",
       "      <th>Gender</th>\n",
       "      <th>SexualOrientation</th>\n",
       "      <th>EducationParents</th>\n",
       "      <th>RaceEthnicity</th>\n",
       "      <th>Age</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>MilitaryUS</th>\n",
       "      <th>SurveyTooLong</th>\n",
       "      <th>SurveyEasy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Kenya</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed part-time</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>20 to 99 employees</td>\n",
       "      <td>Full-stack developer</td>\n",
       "      <td>...</td>\n",
       "      <td>3 - 4 times per week</td>\n",
       "      <td>Male</td>\n",
       "      <td>Straight or heterosexual</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>Black or of African descent</td>\n",
       "      <td>25 - 34 years old</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>The survey was an appropriate length</td>\n",
       "      <td>Very easy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>A natural science (ex. biology, chemistry, phy...</td>\n",
       "      <td>10,000 or more employees</td>\n",
       "      <td>Database administrator;DevOps specialist;Full-...</td>\n",
       "      <td>...</td>\n",
       "      <td>Daily or almost every day</td>\n",
       "      <td>Male</td>\n",
       "      <td>Straight or heterosexual</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>White or of European descent</td>\n",
       "      <td>35 - 44 years old</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>The survey was an appropriate length</td>\n",
       "      <td>Somewhat easy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>United States</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>Computer science, computer engineering, or sof...</td>\n",
       "      <td>20 to 99 employees</td>\n",
       "      <td>Engineering manager;Full-stack developer</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 129 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Respondent Hobby OpenSource         Country Student          Employment  \\\n",
       "0           1   Yes         No           Kenya      No  Employed part-time   \n",
       "1           3   Yes        Yes  United Kingdom      No  Employed full-time   \n",
       "2           4   Yes        Yes   United States      No  Employed full-time   \n",
       "\n",
       "                            FormalEducation  \\\n",
       "0  Bachelor’s degree (BA, BS, B.Eng., etc.)   \n",
       "1  Bachelor’s degree (BA, BS, B.Eng., etc.)   \n",
       "2                          Associate degree   \n",
       "\n",
       "                                      UndergradMajor  \\\n",
       "0                          Mathematics or statistics   \n",
       "1  A natural science (ex. biology, chemistry, phy...   \n",
       "2  Computer science, computer engineering, or sof...   \n",
       "\n",
       "                CompanySize  \\\n",
       "0        20 to 99 employees   \n",
       "1  10,000 or more employees   \n",
       "2        20 to 99 employees   \n",
       "\n",
       "                                             DevType      ...        \\\n",
       "0                               Full-stack developer      ...         \n",
       "1  Database administrator;DevOps specialist;Full-...      ...         \n",
       "2           Engineering manager;Full-stack developer      ...         \n",
       "\n",
       "                    Exercise Gender         SexualOrientation  \\\n",
       "0       3 - 4 times per week   Male  Straight or heterosexual   \n",
       "1  Daily or almost every day   Male  Straight or heterosexual   \n",
       "2                        NaN    NaN                       NaN   \n",
       "\n",
       "                           EducationParents                 RaceEthnicity  \\\n",
       "0  Bachelor’s degree (BA, BS, B.Eng., etc.)   Black or of African descent   \n",
       "1  Bachelor’s degree (BA, BS, B.Eng., etc.)  White or of European descent   \n",
       "2                                       NaN                           NaN   \n",
       "\n",
       "                 Age Dependents  MilitaryUS  \\\n",
       "0  25 - 34 years old        Yes         NaN   \n",
       "1  35 - 44 years old        Yes         NaN   \n",
       "2                NaN        NaN         NaN   \n",
       "\n",
       "                          SurveyTooLong     SurveyEasy  \n",
       "0  The survey was an appropriate length      Very easy  \n",
       "1  The survey was an appropriate length  Somewhat easy  \n",
       "2                                   NaN            NaN  \n",
       "\n",
       "[3 rows x 129 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Country Code dataset\n",
    "\n",
    "We are using the following dataset to map the country name and country code, which are used for plotting the geographical maps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNTRY</th>\n",
       "      <th>CODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>DZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>American Samoa</td>\n",
       "      <td>ASM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>AND</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          COUNTRY CODE\n",
       "0     Afghanistan  AFG\n",
       "1         Albania  ALB\n",
       "2         Algeria  DZA\n",
       "3  American Samoa  ASM\n",
       "4         Andorra  AND"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Country_code = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')\n",
    "Country_code.drop('GDP (BILLIONS)', axis=1, inplace=True)\n",
    "Country_code.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning The Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['MilitaryUS','StackOverflowRecommend','StackOverflowVisit','StackOverflowHasAccount',\\\n",
    "'StackOverflowParticipate','StackOverflowJobs','StackOverflowDevStory','StackOverflowJobsRecommend','StackOverflowConsiderMember'],axis=1,inplace=True)\n",
    "\n",
    "df.drop(['AIDangerous','AIInteresting', 'AIResponsible','AIFuture','EthicsChoice', 'EthicsReport', 'EthicsResponsible','EthicalImplications',\n",
    "               'HypotheticalTools1','HypotheticalTools2','HypotheticalTools3', 'HypotheticalTools4','HypotheticalTools5'],axis=1,inplace=True)\n",
    "df.drop(['JobContactPriorities1', 'JobContactPriorities2',\\\n",
    "       'JobContactPriorities3', 'JobContactPriorities4',\\\n",
    "       'JobContactPriorities5', 'JobEmailPriorities1', 'JobEmailPriorities2',\\\n",
    "       'JobEmailPriorities3', 'JobEmailPriorities4', 'JobEmailPriorities5',\\\n",
    "       'JobEmailPriorities6', 'JobEmailPriorities7'],axis=1, inplace=True)\n",
    "df.drop('RaceEthnicity',axis=1,inplace=True)\n",
    "\n",
    "df.drop(['TimeAfterBootcamp','HackathonReasons','IDE','NumberMonitors','VersionControl','CheckInCode','AgreeDisagree1','AgreeDisagree2','AgreeDisagree3'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Total Survey response from countries\n",
    "\n",
    "We are our finding which countries activily participitated in the survey"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~atupsakhare/4.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "country_df=df.groupby('Country',as_index=False)['Respondent'].count()\n",
    "country_df_code=country_df.merge(Country_code, right_on='COUNTRY', left_on='Country')\n",
    "\n",
    "\n",
    "data = [ dict(\n",
    "        type = 'choropleth',\n",
    "        locations = country_df_code['CODE'],\n",
    "        z = country_df_code['Respondent'],\n",
    "        text = country_df_code['Country'],\n",
    "     \n",
    "        autocolorscale = True,\n",
    "        reversescale = False,\n",
    "        marker = dict(\n",
    "            line = dict (\n",
    "                color = 'rgb(180,180,180)',\n",
    "                width = 0.5\n",
    "            ) ),\n",
    "        colorbar = dict(\n",
    "            autotick = True,\n",
    "            title = 'Respondent per Country'),\n",
    "      ) ]\n",
    "\n",
    "layout = dict(\n",
    "    title = 'Respondent per Country',\n",
    "    geo = dict(\n",
    "        showframe = False,\n",
    "        showcoastlines = False,\n",
    "        projection = dict(\n",
    "            type = 'Mercator'\n",
    "        )\n",
    "    )\n",
    ")\n",
    "\n",
    "fig = dict( data=data, layout=layout )\n",
    "py.iplot( fig, validate=False, filename='d3-world-map' )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Top 10 countries with most survey responses"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc80022908>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc8002a278>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby('Country')['Country'].count().nlargest(10).plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Validating the dataset\n",
    "\n",
    "Here, we are trying to check the coloumns which will be useful. We want to drop the coloumns whose mean of containing the null values is more than 52 percent, which is definetly not useful and we cant derive any conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Most unfilled Survey Question\n",
    "\n",
    "We are taking look at questions of the survey weren't answer by most of the respondent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1ccd0d6c6a0>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc843c3240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "total_null = df.isnull().sum()\n",
    "percentage_null = (total_null/df.shape[0]) * 100\n",
    "percentage_null.sort_values(ascending=False).head(15).plot.bar(title=\"Top 15 Unfilled Survey Question\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Droping columns which are unfilled more than 50 percent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "total_null=df.isnull().sum()\n",
    "percentage_null = (total_null/df.shape[0])*100\n",
    "drop_columns = percentage_null[percentage_null.sort_values(ascending=False)>52]\n",
    "df = df.drop(drop_columns.index.values,  axis=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "83"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Respondent', 'Hobby', 'OpenSource', 'Country', 'Student', 'Employment',\n",
       "       'FormalEducation', 'UndergradMajor', 'CompanySize', 'DevType',\n",
       "       'YearsCoding', 'YearsCodingProf', 'JobSatisfaction',\n",
       "       'CareerSatisfaction', 'HopeFiveYears', 'JobSearchStatus', 'LastNewJob',\n",
       "       'AssessJob1', 'AssessJob2', 'AssessJob3', 'AssessJob4', 'AssessJob5',\n",
       "       'AssessJob6', 'AssessJob7', 'AssessJob8', 'AssessJob9', 'AssessJob10',\n",
       "       'AssessBenefits1', 'AssessBenefits2', 'AssessBenefits3',\n",
       "       'AssessBenefits4', 'AssessBenefits5', 'AssessBenefits6',\n",
       "       'AssessBenefits7', 'AssessBenefits8', 'AssessBenefits9',\n",
       "       'AssessBenefits10', 'AssessBenefits11', 'UpdateCV', 'Currency',\n",
       "       'Salary', 'SalaryType', 'ConvertedSalary', 'CurrencySymbol',\n",
       "       'CommunicationTools', 'TimeFullyProductive', 'EducationTypes',\n",
       "       'SelfTaughtTypes', 'LanguageWorkedWith', 'LanguageDesireNextYear',\n",
       "       'DatabaseWorkedWith', 'DatabaseDesireNextYear', 'PlatformWorkedWith',\n",
       "       'PlatformDesireNextYear', 'FrameworkWorkedWith',\n",
       "       'FrameworkDesireNextYear', 'OperatingSystem', 'Methodology',\n",
       "       'AdBlocker', 'AdBlockerDisable', 'AdsAgreeDisagree1',\n",
       "       'AdsAgreeDisagree2', 'AdsAgreeDisagree3', 'AdsActions',\n",
       "       'AdsPriorities1', 'AdsPriorities2', 'AdsPriorities3', 'AdsPriorities4',\n",
       "       'AdsPriorities5', 'AdsPriorities6', 'AdsPriorities7', 'WakeTime',\n",
       "       'HoursComputer', 'HoursOutside', 'SkipMeals', 'Exercise', 'Gender',\n",
       "       'SexualOrientation', 'EducationParents', 'Age', 'Dependents',\n",
       "       'SurveyTooLong', 'SurveyEasy'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Countrywise Survery Completeness\n",
    "Trying to indentify which country has answered the survey more seriously.\n",
    "What could be the reason for the countryies who didnt fill up the survery from less than 50%?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"SurveyCompleteness\"] = df.notnull().mean(axis=1)\n",
    "countrySurvey = df.groupby([\"Country\"])[\"SurveyCompleteness\"].mean().sort_values(ascending=False).reset_index()\n",
    "countrySurvey.SurveyCompleteness = countrySurvey.SurveyCompleteness*100\n",
    "\n",
    "countrySurvey=countrySurvey.merge(Country_code, right_on='COUNTRY', left_on='Country')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~atupsakhare/4.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "data = [ dict(\n",
    "        type = 'choropleth',\n",
    "        locations = countrySurvey['CODE'],\n",
    "        z = countrySurvey['SurveyCompleteness'],\n",
    "        text = countrySurvey['Country'],\n",
    "        autocolorscale = False,\n",
    "        reversescale = True,\n",
    "        marker = dict(\n",
    "            line = dict (\n",
    "                color = 'rgb(180,180,180)',\n",
    "                width = 0.5\n",
    "            ) ),\n",
    "        colorbar = dict(\n",
    "            autotick = True,\n",
    "            title = 'Survery Completeness from countries'),\n",
    "      ) ]\n",
    "\n",
    "layout = dict(\n",
    "    title = 'Respondent per Country',\n",
    "    geo = dict(\n",
    "        showframe = False,\n",
    "        showcoastlines = False,\n",
    "        projection = dict(\n",
    "            type = 'Mercator'\n",
    "        )\n",
    "    )\n",
    ")\n",
    "\n",
    "fig = dict( data=data, layout=layout )\n",
    "py.iplot( fig, validate=False, filename='d3-world-map' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "df.replace(to_replace='Yes', value=1.0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "df.replace(to_replace='No', value=0.0, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Insight 1: LGBTQ community and OpenSource Contribution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Indentifying LGBTQ Community\n",
    "\n",
    "We took the following steps to derive the LGBTQ Community\n",
    "1. Indentifying the Transgender and Queer from the Gender column\n",
    "2. Indentifyin the Lesbian, Gay and Bi Sexual from the Sexual Orientation Column\n",
    "3. Merge them to create LGBTQ community"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "tq = df[~df[\"Gender\"].isin([\"Male\", \"Female\"]) & df[\"Gender\"].notnull()]\n",
    "df.loc[tq[\"Gender\"].index.values, \"Gender\"] = \"Transgender/Queer\"\n",
    "df[\"lgbtq\"] = (df[\"Gender\"] ==\"Transgender/Queer\") & (df[\"SexualOrientation\"].notnull())\n",
    "df[\"lgbtq\"] = (~df[\"SexualOrientation\"].isin([\"Straight or heterosexual\",\"Asexual\"]) & df[\"SexualOrientation\"].notnull() & df[\"Gender\"].notnull())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# LGBTQ Community Country Survey Response\n",
    "\n",
    "here we are trying to indentify the most active LGBTQ country "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "lgbtq_country = df[df[\"Gender\"] == \"Transgender/Queer\"].groupby([\"Country\"])[\"Respondent\"].count()\\\n",
    "    .sort_values(ascending=False).reset_index() #.plot.bar(title=\"CountryWise Transgender and Queer\")\n",
    "    \n",
    "lgbtq_country_code=lgbtq_country.merge(Country_code, right_on='COUNTRY', left_on='Country')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~atupsakhare/4.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [ dict(\n",
    "        type = 'choropleth',\n",
    "        locations = lgbtq_country_code['CODE'],\n",
    "        z = lgbtq_country_code['Respondent'],\n",
    "        text = lgbtq_country_code['Country'],\n",
    "        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n",
    "           [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n",
    "        autocolorscale = False,\n",
    "        reversescale = True,\n",
    "        marker = dict(\n",
    "            line = dict (\n",
    "                color = 'rgb(180,180,180)',\n",
    "                width = 0.5\n",
    "            ) ),\n",
    "        colorbar = dict(\n",
    "            autotick = False,\n",
    "            title = 'Respondent per Country'),\n",
    "      ) ]\n",
    "\n",
    "layout = dict(\n",
    "    title = 'Respondent per Country',\n",
    "    geo = dict(\n",
    "        showframe = False,\n",
    "        showcoastlines = False,\n",
    "        projection = dict(\n",
    "            type = 'Mercator'\n",
    "        )\n",
    "    )\n",
    ")\n",
    "\n",
    "fig = dict( data=data, layout=layout )\n",
    "\n",
    "py.iplot( fig, validate=False, filename='d3-world-map' )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is intresting to know that the LGBTQ community is more active in India than any Europian coutries, Australia and China."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Gender wise OpenSource Contributer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc84448940>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc8002a8d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby([\"Gender\"])[\"OpenSource\"].count().plot.bar(title=\"GenderWise OpenSource Contributer\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Findings\n",
    "\n",
    "As there are very less number Transgender and Queer, but it seems to one the most active opensource contributers. Around 60% of Transgend and queer are opensource contibuter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc8dfb3cc0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc8450a128>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby([\"Gender\"])[\"OpenSource\"].mean().plot.bar(title=\"Particular GenderWise OpenSource Contribution\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# LGBTQ are more active contibuters for opensource\n",
    "In our findings we found aroung 48% of LGBTQ are opensource contributers, where as non LGBTQ community were only 43%"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc8df9f358>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc8df97f98>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby([\"lgbtq\"])[\"OpenSource\"].mean().plot.bar(title=\"LGBTQ OpenSource Contribution\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "false= non LGBTQ community\n",
    "True = LGBTQ community"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Salary Distribution according to Gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc843f2f60>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc844bbbe0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby([\"Gender\"])[\"ConvertedSalary\"].mean().plot.bar(title=\"Gender Salary Distribution\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is good to know that Transgender/Queer get equal salary as compared to males and more than females, which shows that IT industry is a safe space for the LGBTQ community."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Let us have a look at the salary distribution for LGBTQ community in the pervious year 2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df17 = pd.read_csv(\"survey_results_public_2017.csv\",encoding='ISO-8859-1', low_memory= False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df17['lgbtq']=df.Gender.apply(lambda x: True if ((x=='Gender non-conforming') | (x=='Other') | (x=='Transgender') | (x=='Male; Female') | (x=='Gender non-conforming')) else False)                                          \n",
    "\n",
    "\n",
    "def gender(x):\n",
    "    if ((x=='Gender non-conforming') | (x=='Other') | (x=='Transgender') | (x=='Male; Female') | (x=='Gender non-conforming')):\n",
    "        return \"Transgender/Queer\"\n",
    "    elif (x=='Male'):\n",
    "        return \"Male\"\n",
    "    elif (x==\"Female\"):\n",
    "        return \"Female\"\n",
    "df17.Gender=df17.Gender.apply(lambda x:gender(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc8488c2e8>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc84674630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df17.groupby([\"Gender\"])[\"Salary\"].mean().plot.bar(title=\"Gender Salary Distribution\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Analyzing the trends in 2017 we get to know that there is no bias with the transgender community"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Insights 2: Employee Job Opportunity prefernece, Job Benefits preference and what skill sets are required for higher salary.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Renaming Columns\n",
    "renaming columns to givin appropriate meaning and name for the column for better readability and understanding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.rename(columns={'AssessJob1':'Industry_working','AssessJob2':'Financial_performnace','AssessJob3':'Depatment',\\\n",
    "                   'AssessJob4':'Technologies','AssessJob5':'Benfits','AssessJob6':'Office_culture',\\\n",
    "                   'AssessJob7':'Work_from_home','AssessJob8':'Prof_dev','AssessJob9':'Diversity',\\\n",
    "                   'AssessJob10':'Product_impact'}, inplace=True)\n",
    "df.rename(columns={'AssessBenefits1':'Salary_bonuses','AssessBenefits2':'Stock_options','AssessBenefits3':'Health_insurance',\\\n",
    "                   'AssessBenefits4':'Parental_leave','AssessBenefits5':'Fiteness_benefits','AssessBenefits6':'Pension_plan',\\\n",
    "                   'AssessBenefits7':'Meal_benefits','AssessBenefits8':'Equipment_allowance',\\\n",
    "                   'AssessBenefits9':'Childcare_benefits','AssessBenefits10':'Transportation',\\\n",
    "                   'AssessBenefits11':'Conf_and_education'}, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Job Access Preference\n",
    "\n",
    "What does employee like the most while selecting the job? We have unraivled this question and answeres are providing below in our findings."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Let us first look at the Job Assess preferences of the developers for the year 2018"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "job_assess={'Job_assess_criteria':['Industry_working','Financial_performnace','Depatment','Technologies',\\\n",
    "                                   'Benfits','Office_culture','Work_from_home','Prof_dev','Diversity',\\\n",
    "                                   'Product_impact'],'Priority_rank':[df.Industry_working.mean(),\\\n",
    "                                  df.Financial_performnace.mean(),df.Depatment.mean(),df.Technologies.mean(),\\\n",
    "                                df.Benfits.mean(),df.Office_culture.mean(),\\\n",
    "                                df.Work_from_home.mean(),df.Prof_dev.mean(),df.Diversity.mean(),df.Product_impact.mean()]}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "job_assess_df=pd.DataFrame(data=job_assess)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "job_assess_df['Job_Assess_Preference']=job_assess_df.Priority_rank.rank(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Employee Job Assess Preference 2018')"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc84d11710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.factorplot(y='Job_Assess_Preference',x='Job_assess_criteria',data=job_assess_df.sort_values(by=\"Job_Assess_Preference\"),\\\n",
    "                   aspect=4, kind='bar')\n",
    "g.axes.flatten()[0].set_title(\"Employee Job Assess Preference 2018\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Let us have a look at the Job Assess preferences for the developers in the pervious year i.e., 2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def num(x):\n",
    "    if (x=='Very important'):\n",
    "        return 10\n",
    "    elif (x=='Somewhat important'):\n",
    "        return 8\n",
    "    elif (x=='Important'):\n",
    "        return 6\n",
    "    elif (x=='Not very important'):\n",
    "        return 4\n",
    "    elif (x=='Not at all important'):\n",
    "        return 2\n",
    "    elif (x=='nan'):\n",
    "        return 0\n",
    "df17.AssessJobIndustry=df17.AssessJobIndustry.apply(lambda x: num(x))\n",
    "df17.AssessJobDept=df17.AssessJobDept.apply(lambda x: num(x))\n",
    "df17.AssessJobTech=df17.AssessJobTech.apply(lambda x: num(x))\n",
    "df17.AssessJobCompensation=df17.AssessJobCompensation.apply(lambda x: num(x))\n",
    "df17.AssessJobOffice=df17.AssessJobOffice.apply(lambda x: num(x))\n",
    "df17.AssessJobRemote=df17.AssessJobRemote.apply(lambda x: num(x))\n",
    "df17.AssessJobProfDevel=df17.AssessJobProfDevel.apply(lambda x: num(x))\n",
    "df17.AssessJobDiversity=df17.AssessJobDiversity.apply(lambda x: num(x))\n",
    "df17.AssessJobProduct=df17.AssessJobProduct.apply(lambda x: num(x))\n",
    "df17.AssessJobFinances=df17.AssessJobFinances.apply(lambda x: num(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "df17.rename(columns={'AssessJobIndustry':'Industry_working','AssessJobFinances':'Financial_performnace',\\\n",
    "                'AssessJobDept':'Depatment','AssessJobTech':'Technologies','AssessJobCompensation':'Benfits',\\\n",
    "               'AssessJobOffice':'Office_culture', 'AssessJobRemote':'Work_from_home','AssessJobProfDevel':'Prof_dev',\\\n",
    "                     'AssessJobDiversity':'Diversity', 'AssessJob10':'AssessJobProduct'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "job_assess_2017={'Job_assess_criteria':['Industry_working','Financial_performnace','Depatment','Technologies',\\\n",
    "                                   'Benfits','Office_culture','Work_from_home','Prof_dev','Diversity',\\\n",
    "                                   'Product_impact'],'Priority_rank':[df.Industry_working.mean(),\\\n",
    "                                  df.Financial_performnace.mean(),df.Depatment.mean(),df.Technologies.mean(),\\\n",
    "                                df.Benfits.mean(),df.Office_culture.mean(),\\\n",
    "                                df.Work_from_home.mean(),df.Prof_dev.mean(),df.Diversity.mean(),df.Product_impact.mean()]}\n",
    "job_assess_df17=pd.DataFrame(data=job_assess_2017)\n",
    "\n",
    "job_assess_df17['Job_Access_Preference']=job_assess_df17.Priority_rank.rank(ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Employee Job Access Preference 2017')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc851c1d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g=sns.factorplot(y='Job_Access_Preference',x='Job_assess_criteria',data=job_assess_df17.sort_values(by=\"Job_Access_Preference\"), aspect=4, kind='bar')\n",
    "g.axes.flatten()[0].set_title(\"Employee Job Access Preference 2017\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We can see from the previous two graphs that developers preferences while assessing job opportunity has not changed in last two year and they values benefits, technologies and professional development more than factors like diveristy at work or financial performance of the organisation while assessing any job opportunity."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Job Benefits Preference\n",
    "Similarly, we will indentify which benefits are most prefered by employees\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Employee Job Access Preference 2018')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc851cfac8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "job_benefits= df[['Salary_bonuses','Stock_options','Health_insurance','Parental_leave','Fiteness_benefits','Pension_plan','Meal_benefits','Equipment_allowance','Childcare_benefits','Transportation','Conf_and_education']].mean().reset_index()\n",
    "job_benefits.rename(columns={\"index\":\"Job Benefits\", 0:\"Mean\"}, inplace=True)\n",
    "\n",
    "job_benefits['Job Benefits Preference']=job_benefits[\"Mean\"].rank(ascending=False)\n",
    "g = sns.factorplot(y='Job Benefits Preference',x='Job Benefits',data=job_benefits.sort_values(by=\"Job Benefits Preference\"), aspect=4, kind='bar', )\n",
    "g.axes.flatten()[0].set_title(\"Employee Job Access Preference 2018\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The benefits most valued by developers are salary and bonuses, health insurance and equipment allowance. One interesting point to note here is that the  developers valued equipment allowance more than the pension plan. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Top 5 Job Access Preference for Top 10 country response\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc85086f98>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#job_assess_df.rank()in:datasets\n",
    "countries = df.groupby(\"Country\")[\"Country\"].count().sort_values(ascending=False).head(10).index.values\n",
    "top10 = df[df.Country.isin(countries)]\n",
    "series = top10.groupby(\"Country\")[['Industry_working','Financial_performnace','Depatment','Technologies','Benfits','Office_culture','Work_from_home','Prof_dev','Diversity','Product_impact']].mean()\n",
    "series.rank(ascending=False,method='first', numeric_only=True, axis=1)\n",
    "\n",
    "nlargest = 5\n",
    "order = np.argsort(-series.values, axis=1)[:, :nlargest]\n",
    "result = pd.DataFrame(series.columns[order], \n",
    "                      columns=['{}'.format(i) for i in range(1, nlargest+1)],\n",
    "                      index=series.index).reset_index()\n",
    "\n",
    "s = pd.melt(result, id_vars=[\"Country\"], \n",
    "                  var_name=\"Preference\", value_name=\"Job_Benefits\")\n",
    "\n",
    "s.Preference = pd.to_numeric(s.Preference, errors='coerce')\n",
    "g = sns.factorplot(x=\"Country\", y=\"Preference\", hue='Job_Benefits', data=s,size=3,aspect=6 ,)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  Top 5 Job Benefits Preference for Top 10 country response\n",
    "\n",
    "Here we are trying to dive deeper and getting more insights on country level, \n",
    "in our findings we found that Germeny Country gives more importance to fitness that most of the countries.\n",
    "India is the only country to have conf and education benefits\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc85184048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#job_assess_df.rank()in:datasets\n",
    "countries = df.groupby(\"Country\")[\"Country\"].count().sort_values(ascending=False).head(10).index.values\n",
    "top10 = df[df.Country.isin(countries)]\n",
    "series = top10.groupby(\"Country\")['Salary_bonuses','Stock_options','Health_insurance','Parental_leave','Fiteness_benefits','Pension_plan','Meal_benefits','Equipment_allowance','Childcare_benefits','Transportation','Conf_and_education'].mean()\n",
    "series.rank(ascending=False,method='first', numeric_only=True, axis=1)\n",
    "\n",
    "nlargest = 5\n",
    "order = np.argsort(-series.values, axis=1)[:, :nlargest]\n",
    "result = pd.DataFrame(series.columns[order], \n",
    "                      columns=['{}'.format(i) for i in range(1, nlargest+1)],\n",
    "                      index=series.index).reset_index()\n",
    "\n",
    "s = pd.melt(result, id_vars=[\"Country\"], \n",
    "                  var_name=\"Preference\", value_name=\"Job_Benefits\")\n",
    "\n",
    "s.Preference = pd.to_numeric(s.Preference, errors='coerce')\n",
    "g = sns.factorplot(x=\"Country\", y=\"Preference\", hue='Job_Benefits', data=s,size=3,aspect=6 ,)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above graph shows top job benefit preferences for the top 10 respondent countries. The countries are arranged in alphabetic order."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Skillset required for higher Salary "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Cleaned data and performed regression using decision tree algorithm to determine the salary of a developer depending on Languages, Databases, Platforms, Framework and Methodly they know and have worked on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary1=df['LanguageWorkedWith'].str.get_dummies(sep=\";\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary1['Respondent']=df['Respondent']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Assembly</th>\n",
       "      <th>Bash/Shell</th>\n",
       "      <th>C</th>\n",
       "      <th>C#</th>\n",
       "      <th>C++</th>\n",
       "      <th>CSS</th>\n",
       "      <th>Clojure</th>\n",
       "      <th>Cobol</th>\n",
       "      <th>CoffeeScript</th>\n",
       "      <th>Delphi/Object Pascal</th>\n",
       "      <th>...</th>\n",
       "      <th>Ruby</th>\n",
       "      <th>Rust</th>\n",
       "      <th>SQL</th>\n",
       "      <th>Scala</th>\n",
       "      <th>Swift</th>\n",
       "      <th>TypeScript</th>\n",
       "      <th>VB.NET</th>\n",
       "      <th>VBA</th>\n",
       "      <th>Visual Basic 6</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Assembly  Bash/Shell  C  C#  C++  CSS  Clojure  Cobol  CoffeeScript  \\\n",
       "0         0           0  0   0    0    1        0      0             0   \n",
       "1         0           1  0   0    0    0        0      0             0   \n",
       "2         0           0  0   0    0    0        0      0             0   \n",
       "3         0           1  0   1    0    1        0      0             0   \n",
       "4         0           1  1   0    1    0        0      0             0   \n",
       "\n",
       "   Delphi/Object Pascal     ...      Ruby  Rust  SQL  Scala  Swift  \\\n",
       "0                     0     ...         0     0    0      0      0   \n",
       "1                     0     ...         0     0    0      0      0   \n",
       "2                     0     ...         0     0    0      0      0   \n",
       "3                     0     ...         0     0    1      0      0   \n",
       "4                     0     ...         0     0    1      0      0   \n",
       "\n",
       "   TypeScript  VB.NET  VBA  Visual Basic 6  Respondent  \n",
       "0           0       0    0               0           1  \n",
       "1           0       0    0               0           3  \n",
       "2           0       0    0               0           4  \n",
       "3           1       0    0               0           5  \n",
       "4           0       0    0               0           7  \n",
       "\n",
       "[5 rows x 39 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_skills_salary1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary2=df['DatabaseWorkedWith'].str.get_dummies(sep=\";\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary2['Respondent']=df['Respondent']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary3=df['PlatformWorkedWith'].str.get_dummies(sep=\";\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary3['Respondent']=df['Respondent']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary4=df['FrameworkWorkedWith'].str.get_dummies(sep=\";\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary4['Respondent']=df['Respondent']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary5=df['Methodology'].str.get_dummies(sep=\";\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_skills_salary5['Respondent']=df['Respondent']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "s1=df_skills_salary1.merge(df_skills_salary2, left_on='Respondent',right_on='Respondent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Assembly</th>\n",
       "      <th>Bash/Shell</th>\n",
       "      <th>C</th>\n",
       "      <th>C#</th>\n",
       "      <th>C++</th>\n",
       "      <th>CSS</th>\n",
       "      <th>Clojure</th>\n",
       "      <th>Cobol</th>\n",
       "      <th>CoffeeScript</th>\n",
       "      <th>Delphi/Object Pascal</th>\n",
       "      <th>...</th>\n",
       "      <th>Memcached</th>\n",
       "      <th>Microsoft Azure (Tables, CosmosDB, SQL, etc)</th>\n",
       "      <th>MongoDB</th>\n",
       "      <th>MySQL</th>\n",
       "      <th>Neo4j</th>\n",
       "      <th>Oracle</th>\n",
       "      <th>PostgreSQL</th>\n",
       "      <th>Redis</th>\n",
       "      <th>SQL Server</th>\n",
       "      <th>SQLite</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 60 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Assembly  Bash/Shell  C  C#  C++  CSS  Clojure  Cobol  CoffeeScript  \\\n",
       "0         0           0  0   0    0    1        0      0             0   \n",
       "1         0           1  0   0    0    0        0      0             0   \n",
       "2         0           0  0   0    0    0        0      0             0   \n",
       "3         0           1  0   1    0    1        0      0             0   \n",
       "4         0           1  1   0    1    0        0      0             0   \n",
       "\n",
       "   Delphi/Object Pascal   ...    Memcached  \\\n",
       "0                     0   ...            0   \n",
       "1                     0   ...            1   \n",
       "2                     0   ...            0   \n",
       "3                     0   ...            0   \n",
       "4                     0   ...            0   \n",
       "\n",
       "   Microsoft Azure (Tables, CosmosDB, SQL, etc)  MongoDB  MySQL  Neo4j  \\\n",
       "0                                             1        0      1      0   \n",
       "1                                             0        0      0      0   \n",
       "2                                             0        0      0      0   \n",
       "3                                             1        0      0      0   \n",
       "4                                             0        0      0      0   \n",
       "\n",
       "   Oracle  PostgreSQL  Redis  SQL Server  SQLite  \n",
       "0       0           1      1           1       0  \n",
       "1       0           1      1           0       0  \n",
       "2       0           0      0           0       0  \n",
       "3       0           0      0           1       0  \n",
       "4       1           1      0           1       0  \n",
       "\n",
       "[5 rows x 60 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Assembly', 'Bash/Shell', 'C', 'C#', 'C++', 'CSS', 'Clojure', 'Cobol',\n",
       "       'CoffeeScript', 'Delphi/Object Pascal', 'Erlang', 'F#', 'Go', 'Groovy',\n",
       "       'HTML', 'Hack', 'Haskell', 'Java', 'JavaScript', 'Julia', 'Kotlin',\n",
       "       'Lua', 'Matlab', 'Objective-C', 'Ocaml', 'PHP', 'Perl', 'Python', 'R',\n",
       "       'Ruby', 'Rust', 'SQL', 'Scala', 'Swift', 'TypeScript', 'VB.NET', 'VBA',\n",
       "       'Visual Basic 6', 'Respondent', 'Amazon DynamoDB', 'Amazon RDS/Aurora',\n",
       "       'Amazon Redshift', 'Apache HBase', 'Apache Hive', 'Cassandra',\n",
       "       'Elasticsearch', 'Google BigQuery', 'Google Cloud Storage', 'IBM Db2',\n",
       "       'MariaDB', 'Memcached', 'Microsoft Azure (Tables, CosmosDB, SQL, etc)',\n",
       "       'MongoDB', 'MySQL', 'Neo4j', 'Oracle', 'PostgreSQL', 'Redis',\n",
       "       'SQL Server', 'SQLite'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "s2=s1.merge(df_skills_salary3, left_on='Respondent',right_on='Respondent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "s3=s2.merge(df_skills_salary4, left_on='Respondent',right_on='Respondent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "s4=s3.merge(df_skills_salary5, left_on='Respondent',right_on='Respondent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "s4['Salary']=df['ConvertedSalary']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "s5=s4[s4.Salary.notnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Assembly</th>\n",
       "      <th>Bash/Shell</th>\n",
       "      <th>C</th>\n",
       "      <th>C#</th>\n",
       "      <th>C++</th>\n",
       "      <th>CSS</th>\n",
       "      <th>Clojure</th>\n",
       "      <th>Cobol</th>\n",
       "      <th>CoffeeScript</th>\n",
       "      <th>Delphi/Object Pascal</th>\n",
       "      <th>...</th>\n",
       "      <th>Evidence-based software engineering</th>\n",
       "      <th>Extreme programming (XP)</th>\n",
       "      <th>Formal standard such as ISO 9001 or IEEE 12207 (aka “waterfall” methodologies)</th>\n",
       "      <th>Kanban</th>\n",
       "      <th>Lean</th>\n",
       "      <th>Mob programming</th>\n",
       "      <th>PRINCE2</th>\n",
       "      <th>Pair programming</th>\n",
       "      <th>Scrum</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>70841.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21426.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>41671.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>120000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>250000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Assembly  Bash/Shell  C  C#  C++  CSS  Clojure  Cobol  CoffeeScript  \\\n",
       "1         0           1  0   0    0    0        0      0             0   \n",
       "4         0           1  1   0    1    0        0      0             0   \n",
       "5         0           0  0   0    0    1        0      0             0   \n",
       "6         0           0  0   0    0    1        0      0             0   \n",
       "8         1           1  0   0    0    1        0      0             1   \n",
       "\n",
       "   Delphi/Object Pascal    ...     Evidence-based software engineering  \\\n",
       "1                     0    ...                                       0   \n",
       "4                     0    ...                                       1   \n",
       "5                     0    ...                                       0   \n",
       "6                     0    ...                                       0   \n",
       "8                     0    ...                                       1   \n",
       "\n",
       "   Extreme programming (XP)  \\\n",
       "1                         0   \n",
       "4                         0   \n",
       "5                         0   \n",
       "6                         0   \n",
       "8                         1   \n",
       "\n",
       "   Formal standard such as ISO 9001 or IEEE 12207 (aka “waterfall” methodologies)  \\\n",
       "1                                                  0                                \n",
       "4                                                  1                                \n",
       "5                                                  0                                \n",
       "6                                                  0                                \n",
       "8                                                  1                                \n",
       "\n",
       "   Kanban  Lean  Mob programming  PRINCE2  Pair programming  Scrum    Salary  \n",
       "1       0     0                0        0                 0      0   70841.0  \n",
       "4       0     0                0        0                 0      0   21426.0  \n",
       "5       0     0                0        0                 0      0   41671.0  \n",
       "6       0     0                0        0                 0      1  120000.0  \n",
       "8       1     1                0        0                 1      1  250000.0  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s5.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = s5.drop('Salary',axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "X.drop('Respondent', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "107"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(X.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y=s5['Salary']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Predicting Salary using Decision Tree Regressor depending from developers skills set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sklearn.tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "dt = sklearn.tree.DecisionTreeRegressor(max_depth = 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeRegressor(criterion='mse', max_depth=2, max_features=None,\n",
       "           max_leaf_nodes=None, min_impurity_decrease=0.0,\n",
       "           min_impurity_split=None, min_samples_leaf=1,\n",
       "           min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "           presort=False, random_state=None, splitter='best')"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.fit(X,Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "95780.86178776571"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import sklearn.tree as tree\n",
    "from IPython.display import Image  \n",
    "import pydotplus\n",
    "\n",
    "dt_feature_names = list(X.columns)\n",
    "dt_target_names = np.array(Y.unique(),dtype=np.string_) \n",
    "tree.export_graphviz(dt, out_file='tree.dot', \n",
    "    feature_names=dt_feature_names, class_names=dt_target_names,\n",
    "    filled=True)  \n",
    "graph = pydotplus.graph_from_dot_file('tree.dot')\n",
    "Image(graph.create_png())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### From the decision tree above we can see that developers who know Agile and AWS get higher salary than those developers who don't know Agile but knows PHP. A very interesting thing to note here is that the developers who don't  know PHP gets higher salary than the developers who know PHP."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc8352e6d8>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc850d3ef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.factorplot(x='AWS',y='Salary',hue='Agile',data=s5,kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 0= Not Worked With\n",
    "### 1=Worked With\n",
    "#### From the above graph we can see that developer who has worked on and knows AWS and Agile get higher salaries than those who didn't know or work on them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc850d75f8>"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc850d4d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.factorplot(x='PHP',y='Salary',hue='Agile',data=s5,kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 0= Not Worked With\n",
    "### 1=Worked With\n",
    "#### From the above graph we can see that developer who has worked on Agile and not worked with PHP get higher salaries than those who worked with PHP and don't know or didn't worked with Agile."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Insight 3: Majority developers with bachelor's degree are ones whose parents never completed any formal education"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Associate degree</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Associate degree</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>1264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Associate degree</td>\n",
       "      <td>I never completed any formal education</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Associate degree</td>\n",
       "      <td>Master’s degree (MA, MS, M.Eng., MBA, etc.)</td>\n",
       "      <td>415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Associate degree</td>\n",
       "      <td>Other doctoral degree (Ph.D, Ed.D., etc.)</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   EducationParents                              FormalEducation  Respondent\n",
       "0  Associate degree                             Associate degree         410\n",
       "1  Associate degree     Bachelor’s degree (BA, BS, B.Eng., etc.)        1264\n",
       "2  Associate degree       I never completed any formal education          12\n",
       "3  Associate degree  Master’s degree (MA, MS, M.Eng., MBA, etc.)         415\n",
       "4  Associate degree    Other doctoral degree (Ph.D, Ed.D., etc.)          40"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['EducationParents','FormalEducation'])['Respondent'].count().reset_index().head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EducationParents\n",
       "Associate degree                                                                       2858\n",
       "Bachelor’s degree (BA, BS, B.Eng., etc.)                                              18090\n",
       "Master’s degree (MA, MS, M.Eng., MBA, etc.)                                           13630\n",
       "Other doctoral degree (Ph.D, Ed.D., etc.)                                              3710\n",
       "Primary/elementary school                                                              3234\n",
       "Professional degree (JD, MD, etc.)                                                     2725\n",
       "Secondary school (e.g. American high school, German Realschule or Gymnasium, etc.)    10664\n",
       "Some college/university study without earning a degree                                 5715\n",
       "They never completed any formal education                                              1187\n",
       "Name: Respondent, dtype: int64"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('EducationParents')['Respondent'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### First we categorised the parent educations into three categories namely 'Highly Educated', 'Moderately Educated' and 'No Formal Education'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getGroup(x):\n",
    "    if ((x=='Associate degree') | (x=='Bachelor’s degree (BA, BS, B.Eng., etc.)')|(x=='Master’s degree (MA, MS, M.Eng., MBA, etc.)')|(x=='Other doctoral degree (Ph.D, Ed.D., etc.)')|(x=='Professional degree (JD, MD, etc.)')):\n",
    "        return 'Highly Educated'\n",
    "    elif((x=='Primary/elementary school')|(x=='Secondary school (e.g. American high school, German Realschule or Gymnasium, etc.)')|(x=='Some college/university study without earning a degree')):\n",
    "        return 'Moderately Educated'\n",
    "    elif (x=='They never completed any formal education'):\n",
    "        return 'No Formal Education'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['EducationParents1']=df.EducationParents.apply(lambda x: getGroup(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "temp1=df.groupby(['EducationParents1','FormalEducation'])['Respondent'].count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>1182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>19447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>I never completed any formal education</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Master’s degree (MA, MS, M.Eng., MBA, etc.)</td>\n",
       "      <td>10285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Other doctoral degree (Ph.D, Ed.D., etc.)</td>\n",
       "      <td>1280</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  EducationParents1                              FormalEducation  Respondent\n",
       "0   Highly Educated                             Associate degree        1182\n",
       "1   Highly Educated     Bachelor’s degree (BA, BS, B.Eng., etc.)       19447\n",
       "2   Highly Educated       I never completed any formal education         107\n",
       "3   Highly Educated  Master’s degree (MA, MS, M.Eng., MBA, etc.)       10285\n",
       "4   Highly Educated    Other doctoral degree (Ph.D, Ed.D., etc.)        1280"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>41013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Moderately Educated</td>\n",
       "      <td>19613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>1187</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     EducationParents1  Respondent\n",
       "0      Highly Educated       41013\n",
       "1  Moderately Educated       19613\n",
       "2  No Formal Education        1187"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp2=df.groupby(['EducationParents1'])['Respondent'].count().reset_index()\n",
    "temp2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### For each combination of parents education category and the developers education level, we have taken ratio of the total number of respondents belonging to that particular combination to the total number of respondents with that particular parent education category."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "temp3=temp1.merge(temp2,on=\"EducationParents1\", how='left')\n",
    "temp3[\"Percentage\"] = temp3[\"Respondent_x\"]/ temp3[\"Respondent_y\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent_x</th>\n",
       "      <th>Respondent_y</th>\n",
       "      <th>Percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>1182</td>\n",
       "      <td>41013</td>\n",
       "      <td>0.028820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>19447</td>\n",
       "      <td>41013</td>\n",
       "      <td>0.474167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>I never completed any formal education</td>\n",
       "      <td>107</td>\n",
       "      <td>41013</td>\n",
       "      <td>0.002609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Master’s degree (MA, MS, M.Eng., MBA, etc.)</td>\n",
       "      <td>10285</td>\n",
       "      <td>41013</td>\n",
       "      <td>0.250774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Highly Educated</td>\n",
       "      <td>Other doctoral degree (Ph.D, Ed.D., etc.)</td>\n",
       "      <td>1280</td>\n",
       "      <td>41013</td>\n",
       "      <td>0.031210</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  EducationParents1                              FormalEducation  \\\n",
       "0   Highly Educated                             Associate degree   \n",
       "1   Highly Educated     Bachelor’s degree (BA, BS, B.Eng., etc.)   \n",
       "2   Highly Educated       I never completed any formal education   \n",
       "3   Highly Educated  Master’s degree (MA, MS, M.Eng., MBA, etc.)   \n",
       "4   Highly Educated    Other doctoral degree (Ph.D, Ed.D., etc.)   \n",
       "\n",
       "   Respondent_x  Respondent_y  Percentage  \n",
       "0          1182         41013    0.028820  \n",
       "1         19447         41013    0.474167  \n",
       "2           107         41013    0.002609  \n",
       "3         10285         41013    0.250774  \n",
       "4          1280         41013    0.031210  "
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc8510c898>"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc8510c048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.factorplot(y='FormalEducation',x='Percentage', hue='EducationParents1',data=temp3, aspect=3, kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### From the graph above we can notice that the majority of developers have Bachelor's Degree and majority of developers who have this bachelor's degree their parent had no formal education. Which is a good sign that the education trend changed from one generation to another. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We decided to drill down this category further to find out more intresting results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "no_fromal_edu_parents=temp1[temp1.EducationParents1=='No Formal Education']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>I never completed any formal education</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Master’s degree (MA, MS, M.Eng., MBA, etc.)</td>\n",
       "      <td>199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Other doctoral degree (Ph.D, Ed.D., etc.)</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      EducationParents1                              FormalEducation  \\\n",
       "18  No Formal Education                             Associate degree   \n",
       "19  No Formal Education     Bachelor’s degree (BA, BS, B.Eng., etc.)   \n",
       "20  No Formal Education       I never completed any formal education   \n",
       "21  No Formal Education  Master’s degree (MA, MS, M.Eng., MBA, etc.)   \n",
       "22  No Formal Education    Other doctoral degree (Ph.D, Ed.D., etc.)   \n",
       "\n",
       "    Respondent  \n",
       "18          47  \n",
       "19         593  \n",
       "20          57  \n",
       "21         199  \n",
       "22          13  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "no_fromal_edu_parents.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Let's first see the genral trend of respondent education level whose parents have no formal education."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc81d07a90>"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc81d2f2b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.factorplot(y='FormalEducation',x='Respondent',data=no_fromal_edu_parents, aspect=4, kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now let's see the countrywise distribution of number of respondents whose parents have no formal education."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_wise_edu=df.groupby(['EducationParents1','Country'])['Respondent'].count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_no_formal=country_wise_edu[country_wise_edu.EducationParents1=='No Formal Education']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_no_formal=country_no_formal.merge(Country_code, right_on='COUNTRY', left_on='Country')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>Country</th>\n",
       "      <th>Respondent</th>\n",
       "      <th>COUNTRY</th>\n",
       "      <th>CODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Albania</td>\n",
       "      <td>1</td>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>6</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>DZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>1</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>ARG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>1</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>ARM</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     EducationParents1      Country  Respondent      COUNTRY CODE\n",
       "0  No Formal Education  Afghanistan           2  Afghanistan  AFG\n",
       "1  No Formal Education      Albania           1      Albania  ALB\n",
       "2  No Formal Education      Algeria           6      Algeria  DZA\n",
       "3  No Formal Education    Argentina           1    Argentina  ARG\n",
       "4  No Formal Education      Armenia           1      Armenia  ARM"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "country_no_formal.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_no_formal.drop('COUNTRY', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EducationParents1</th>\n",
       "      <th>Country</th>\n",
       "      <th>Respondent</th>\n",
       "      <th>CODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2</td>\n",
       "      <td>AFG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Albania</td>\n",
       "      <td>1</td>\n",
       "      <td>ALB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>6</td>\n",
       "      <td>DZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>1</td>\n",
       "      <td>ARG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No Formal Education</td>\n",
       "      <td>Armenia</td>\n",
       "      <td>1</td>\n",
       "      <td>ARM</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     EducationParents1      Country  Respondent CODE\n",
       "0  No Formal Education  Afghanistan           2  AFG\n",
       "1  No Formal Education      Albania           1  ALB\n",
       "2  No Formal Education      Algeria           6  DZA\n",
       "3  No Formal Education    Argentina           1  ARG\n",
       "4  No Formal Education      Armenia           1  ARM"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "country_no_formal.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~atupsakhare/4.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "data = [ dict(\n",
    "        type = 'choropleth',\n",
    "        locations = country_no_formal['CODE'],\n",
    "        z = country_no_formal['Respondent'],\n",
    "        text = country_no_formal['Country'],\n",
    "          colorscale=[[0, 'rgb(166,206,227)'], [0.25, 'rgb(31,120,180)'], [0.45, 'rgb(178,223,138)'], \\\n",
    "                  [0.65, 'rgb(51,160,44)'], [0.85, 'rgb(251,154,153)'], [1, 'rgb(227,26,28)']],\n",
    "\n",
    "        autocolorscale = False,\n",
    "        reversescale = True,\n",
    "        marker = dict(\n",
    "            line = dict (\n",
    "                color = 'rgb(180,180,180)',\n",
    "                width = 0.5\n",
    "            ) ),\n",
    "        colorbar = dict(\n",
    "            autotick = True,\n",
    "            title = 'No. of Respondent with parents with no formal education'),\n",
    "      ) ]\n",
    "\n",
    "layout = dict(\n",
    "    title = 'Respondent with parents with no formal education per Country',\n",
    "    geo = dict(\n",
    "        showframe = False,\n",
    "        showcoastlines = False,\n",
    "        projection = dict(\n",
    "            type = 'Mercator'\n",
    "        )\n",
    "    )\n",
    ")\n",
    "\n",
    "fig = dict( data=data, layout=layout )\n",
    "py.iplot( fig, validate=False, filename='d3-world-map' )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### From the map above we can see that highest number of repondents whose parents are have no formal education are from India."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now let's see the countrywise distribution of number of respondents with Bachelor’s degree (BA, BS, B.Eng., etc.)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "p1=df.groupby(['Country','FormalEducation'])['Respondent'].count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Associate degree</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>I never completed any formal education</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Master’s degree (MA, MS, M.Eng., MBA, etc.)</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Other doctoral degree (Ph.D, Ed.D., etc.)</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country                              FormalEducation  Respondent\n",
       "0  Afghanistan                             Associate degree           2\n",
       "1  Afghanistan     Bachelor’s degree (BA, BS, B.Eng., etc.)          18\n",
       "2  Afghanistan       I never completed any formal education          11\n",
       "3  Afghanistan  Master’s degree (MA, MS, M.Eng., MBA, etc.)           5\n",
       "4  Afghanistan    Other doctoral degree (Ph.D, Ed.D., etc.)           2"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "p2=p1[p1.FormalEducation==\"Bachelor’s degree (BA, BS, B.Eng., etc.)\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Angola</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Country                           FormalEducation  Respondent\n",
       "1   Afghanistan  Bachelor’s degree (BA, BS, B.Eng., etc.)          18\n",
       "8       Albania  Bachelor’s degree (BA, BS, B.Eng., etc.)          51\n",
       "17      Algeria  Bachelor’s degree (BA, BS, B.Eng., etc.)          25\n",
       "26      Andorra  Bachelor’s degree (BA, BS, B.Eng., etc.)           2\n",
       "33       Angola  Bachelor’s degree (BA, BS, B.Eng., etc.)           1"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "p3=p2.merge(Country_code, right_on='COUNTRY', left_on='Country')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>Respondent</th>\n",
       "      <th>COUNTRY</th>\n",
       "      <th>CODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>18</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>51</td>\n",
       "      <td>Albania</td>\n",
       "      <td>ALB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>25</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>DZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>2</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>AND</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>Bachelor’s degree (BA, BS, B.Eng., etc.)</td>\n",
       "      <td>1</td>\n",
       "      <td>Angola</td>\n",
       "      <td>AGO</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country                           FormalEducation  Respondent  \\\n",
       "0  Afghanistan  Bachelor’s degree (BA, BS, B.Eng., etc.)          18   \n",
       "1      Albania  Bachelor’s degree (BA, BS, B.Eng., etc.)          51   \n",
       "2      Algeria  Bachelor’s degree (BA, BS, B.Eng., etc.)          25   \n",
       "3      Andorra  Bachelor’s degree (BA, BS, B.Eng., etc.)           2   \n",
       "4       Angola  Bachelor’s degree (BA, BS, B.Eng., etc.)           1   \n",
       "\n",
       "       COUNTRY CODE  \n",
       "0  Afghanistan  AFG  \n",
       "1      Albania  ALB  \n",
       "2      Algeria  DZA  \n",
       "3      Andorra  AND  \n",
       "4       Angola  AGO  "
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "p3.drop('COUNTRY', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~atupsakhare/4.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "data = [ dict(\n",
    "        type = 'choropleth',\n",
    "        locations = p3['CODE'],\n",
    "        z = p3['Respondent'],\n",
    "        text = p3['Country'],\n",
    "  \n",
    "      colorscale=[[0, 'rgb(166,206,227)'], [0.25, 'rgb(31,120,180)'], [0.45, 'rgb(178,223,138)'], \\\n",
    "                  [0.65, 'rgb(51,160,44)'], [0.85, 'rgb(251,154,153)'], [1, 'rgb(227,26,28)']],\n",
    "\n",
    "        autocolorscale = False,\n",
    "        reversescale = True,\n",
    "        marker = dict(\n",
    "            line = dict (\n",
    "                color = 'rgb(180,180,180)',\n",
    "                width = 0.5\n",
    "            ) ),\n",
    "        colorbar = dict(\n",
    "            autotick = True,\n",
    "            title = 'No. of Respondent with Bachelor’s degree'),\n",
    "      ) ]\n",
    "\n",
    "layout = dict(\n",
    "    title = 'Respondent with Bachelor’s degree (BA, BS, B.Eng., etc.) per Country',\n",
    "    geo = dict(\n",
    "        showframe = False,\n",
    "        showcoastlines = False,\n",
    "        projection = dict(\n",
    "            type = 'Mercator'\n",
    "        )\n",
    "    )\n",
    ")\n",
    "\n",
    "fig = dict( data=data, layout=layout )\n",
    "py.iplot( fig, validate=False, filename='d3-world-map' )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### We can see from the above graph that highest number of respondents with  Bachelor’s degree (BA, BS, B.Eng., etc.) are from United States followed by India. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### From last two map plots it is interesting to note that how India  is the country with most respondent's parents having no formal education and at the same time India also rank 2nd in the reposndents with Bachelor’s degree (BA, BS, B.Eng., etc.). Thus can see how the education trend has changed in India from perivious generation to the current generation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Some more intresting finding "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## How much time did developers spend on computers and outside a building "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Total Hours spent inside a building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc823fc978>"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc83d77898>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "hours=df.groupby('HoursComputer',as_index=False)['Respondent'].count().rename(columns={'Respondent': 'count1'})\n",
    "\n",
    "country=df.groupby(['HoursComputer','Country'], as_index=False)['Respondent'].count().rename(columns={'Respondent': 'count2'}).sort_values(ascending=False, by='count2').head(10)\n",
    "\n",
    "temp=hours.merge(country, how='left')\n",
    "temp1=temp.dropna()\n",
    "\n",
    "temp['ratio']=temp.count2/temp.count1\n",
    "\n",
    "sns.factorplot(y='ratio',x='HoursComputer', hue='Country',data=temp, aspect=4, kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1cc835919e8>"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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jUnjixgAAAAAAAAxKy4uTkVFRev+/d//PfXBBx88s1mzZp6SklL60EMPbdy3b198Tk5Onpn5f//3f29KS0srk6QhQ4bsysnJyUtPTz+Yl5d3xPXwqrriiis+HzZsWOdXXnmlzYMPPrihujpXX3317jFjxsSPGjVqR32/xq8DSTsAAAAAAADUq06dOh2eOXPmh1XLH3vssU2SNlUtf/TRR6st/+STT5ZWPu/Tp8/+efPmlUhS165dS1evXr2icl/lzSiizZ07t0WXLl329+jR4+Dxv5KGQ9IOAAAAAAAAJ5Wf/exnZz711FNJTz755EcNHcvx4pp2AAAAAAAAOKncc889Wzdv3rx04MCBR8zAayxI2gEAAAAAAAAxptbLY82sm6QLg8133H1xOCEBAAAAAAAA32y1mmlnZrdKelbS6cHjGTP7cZiBAQAAAAAAAN9UtZ1pd5Okc9z9C0kys4mS/lfSQ2EFBgAAAAAAAHxT1faadiapPGq7PCgDAAAAAADAN0xJSUnTzMzMvOiysWPHdhg/fvwZR2v39ttvt7zhhhtSJWnGjBmJr7322il1PXZycnLBli1bjpiI9uCDD7bLysrKzcrKys3MzMx75pln2kjSpEmT2q1fv77Jsfqtbb2vS21n2j0paa6ZvRBsXybpiXBCAgAAAAAAQF0U3j61sD77W3DfiAX12V+lPn367O/Tp89+SXr99dcTW7VqVT5gwIAvTrTfdevWNbn//vvPWrRo0cp27dqV7969O64ysffMM8+07969+4FOnTodPlofta33danVTDt3f0DSDyTtlLRL0g/c/cEwAwMAAAAAAEDj1KtXry4//OEPkwsKCnI6deqUP2vWrFZSZHZdv379MkpKSppOnTo16dFHHz0jOzs7d9asWa02b96cMHDgwM75+fk5+fn5Oa+++uopkrR169b43r17Z+bk5ORec801Hd39iONt2bKlySmnnFLRunXrcklq3bp1RXZ29qEnn3yy7bJly1qOGDHiW9nZ2bn79u2z22677az8/PyczMzMvKuvvrpjRUWFqqv3zjvvtDz77LO75OXl5VxwwQWZH3/8cRNJ+uUvf3l6586d87KysnIHDx78rbB+h0dN2pnZqcHP0yStl/SMpD9K+jgoAwAAAAAAAI5QVlZmS5cuXTlx4sSNEyZM6BC9r0uXLodGjBixffTo0Z+u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fhl9+/bNqNw3ffr0U9PT0/MKCwu7TJ8+vU3lsT799NP4iy66qHNWVlZut27dsufOndtCisw4vPzyyzv17t07Mzk5ueDpp59uM3r06JSsrKzcCy+8MLO0tNRq8zskaQcAAAAAAIB6V1ZWZkuXLl05ceLEjRMmTOgQva9Lly6HRowYsX306NGfrlq1asWgQYP23Xzzzaljx479dNmyZStfeOGFdaNHj+4kSePGjetw3nnn7Vu5cuWKoUOHfr5ly5amNR3zqquuyrj//vs3DBw4cF9NdT799NMmxcXFq1566aU1d999d7IkTZ06te3GjRublpSULH/66afXL1y4sJUk7d+/38aMGdOpqKho7fz580u2bdvWpLKfO+64o0O3bt32r169esUvfvGLT66//vr0yn0ff/xxs9dff33t9OnT144ePTq9f//+e1avXr2iefPmFc8//3zr2vz+Qk3amdkgMysxs7VmNq6a/X3M7AMzKzOzYVX2lZvZouBRFGacAAAAAAAAqD2z6ieLRZdfeeWVuyTp/PPP/2LTpk01JtoqzZkz59Rbb701LTs7O3fIkCEZ+/bti9+1a1fc+++/n3jjjTfukKThw4fvPvXUU8tr6qN37957nnjiifZlZWU1Hmfo0KGfx8fHq7Cw8OCOHTuaSNI777zT6vLLL98VHx+vtLS0snPPPXevJC1atKh5SkpKaUFBQWlcXJyuvfbaHZX9zJs3L/Gmm27aEfS59/PPP0/YsWNHvCRddNFFu5s1a+a9evU6UF5ebsOGDdsjSXl5eQc++uijY/4upBCTdmYWL+kRSZdIypV0tZnlVqm2QdINkp6rposD7t49eAwNK04AAAAAAADUzRlnnFG2e/fu+OiynTt3xrdv3/7LbFnz5s1dkhISElReXn7MJaHuruLi4pWrVq1asWrVqhXbtm1b0rZt2wpJiourXQrrD3/4wwZJGjFiRMea6lTGVXnM6J/VqSlBWV0bM3NJatasmUtSfHy8EhISvDL+uLg4lZWVNfjy2F6S1rr7h+5+SNI0SZdGV3D39e6+RFJFiHEAAAAAAACgHrVu3bri9NNPP/zSSy8lSpHru7355put+/fvX+Oy1KoSExPL9+7d+2Xi74ILLtgzceLE0yu333vvvRaSdO655+6dMmVKO0l6/vnnT92zZ0/8kb1FxMXF6aWXXvpw7dq1zX/yk590qKleVRdeeOG+F198sW15ebk2btyYMHfu3ERJ6t69+8FNmzY1Xb58eTNJmjZt2mmVbc4999y9Tz75ZDspcq2+tm3blp122mn1luMKM2mXLGlj1PamoKy2mptZsZm9b2aX1W9oAAAAAAAAOBFPP/30R/fcc89Z2dnZuX379u1y5513bs7Lyyutbfsrrrji87/97W9tKm9EMXny5I0ffPDBKVlZWbmdO3fOe/jhh5Mk6d577908Z86cVrm5uTmzZ89ufdZZZx06Wr8tWrTwV155Ze2sWbPa/PrXv06qTSzXX3/9rrPOOutQVlZW3g9xULJ9AAAeXklEQVR+8IOO3bp1+6JNmzblLVu29IceeujjwYMHZxQWFnZJTU398tgTJ07c/MEHH7TMysrKveuuu5Kfeuqpj2r72mvDjjb974Q6NrtS0kB3Hxlsf19SL3f/cTV1n5I0w92nR5V1cPfNZvYtSa9L+hd3X1el3ShJoyQpLS2t8OOPP67311F4+9R67zMsC+4b0dAhACetDRMKGjqEWksbv7ShQ0AM4PwFhIfxBQAIWa2WTi5evHh9t27dPgs7mG+S3bt3x7Vu3bpi69at8WeffXbOnDlzVqWlpdV8cbx6tHjx4vbdunXrFF2WEOLxNklKjdpOkbS5to3dfXPw80Mze1NSD0nrqtSZLGmyJPXs2TOc7CMAAAAAAABOegMGDMjcs2dP/OHDh+3222/f8nUl7GoSZtJuvqRMM0uX9Imk4ZKuqU1DM2srab+7l5pZe0m9Jf0mtEgBAAAAAADwjTZv3rySho4hWmjXtHP3MkljJM2WtFLS8+6+3MwmmNlQSTKzs81sk6QrJT1mZsuD5jmSis1ssaQ3JN3r7ivCihUAAAAAAACIJWHOtJO7z5Q0s0rZ+Kjn8xVZNlu13XuSGs8FpAAAAAAAAIB6FObdYwEAAAAAAAAcB5J2AAAAAAAAQIwhaQcAAAAAAIDjsnHjxoQhQ4akp6SkFOTl5eV07949e+rUqW0aOq6TQajXtAMAAAAAAED43urTt7A+++v79lsLjlWnoqJCQ4YMybjmmmt2vPzyyx9J0urVq5v++c9/rlXSrqysTAkJpKZqwkw7AAAAAAAA1NnLL7+c2KRJE7/jjju2V5ZlZWUduuuuu7aVlZXp5ptvTsnPz8/JysrKve+++9pL0owZMxLPOeecrCFDhqR36dIlr6SkpGl6enreVVdd1TEzMzNv6NCh6S+++GLit7/97eyOHTvmv/HGGy0l6Y033mjZo0eP7JycnNwePXpkL168uJkkTZo0qd3FF1/c+cILL8zs2LFj/ujRo1Mk6be//W37m266KbUyrvvvv7/9yJEjj7gZaiwjnXkS2TCh8dxwN2380oYOAQAAAAAAnIClS5e26Nq16/7q9j344IPtW7duXb5s2bKVBw4csLPPPjt7yJAheyRpyZIlpyxcuHB5dnb2oZKSkqYbN25s/qc//enDwsLCj7t27Zrz7LPPtisuLl713HPPtfnVr351Vr9+/dZ169bt4Lx581Y1adJEL774YuIdd9yRMnv27HWStGLFipaLFy9e0aJFi4qMjIz822677dObbrppZ15eXm5paemmZs2a+TPPPNP+scce+/jr/P2cKJJ2AAAAAAAAOGHf//730+bNm9eqSZMmnpKSUrpq1aqWRUVFbSVp79698StWrGjetGlT79q16xfZ2dmHKtslJyeX9urV64AkZWVlHejfv/+euLg4ffvb397/y1/+soMk7dy5M/6qq65KX79+fXMz88OHD1tl+wsuuGBPu3btyiUpIyPj4Lp165plZGTs6927994//elPrQsKCg4ePnzYKo/RWLA8FgAAAAAAAHVWUFBwYMmSJS0rt//4xz9uePPNN1fv2rUrwd3t/vvv37Bq1aoVq1atWvHJJ58svfzyy/dIUsuWLSui+2natKlXPo+Li1Pz5s1dkuLj41VeXm6SdOeddyb37dt375o1a5a//PLLaw8dOhRXXfv4+PgvE3qjRo367Omnn243efLkdtddd91nYf0ewkLSDgAAAAAAAHU2ZMiQvaWlpTZx4sSkyrJ9+/bFSdKAAQN2//73v08qLS01SVqyZEmzPXv2HHceas+ePfEpKSmHJOmxxx5rX5s2/fv3/2LLli1NX3jhhXY33XTTzuM9dkNheSwAAAAAAADqLC4uTi+//PK6H/3oR6mTJk0687TTTitr2bJl+c9//vNNN954467169c3KygoyHF3O+200w7PnDlz3fEe684779w6cuTI9EmTJp154YUX7qltu8suu2zXkiVLWiYlJZUf77Ebirn7sWs1Aj179vTi4uJ677fw9qn13mdYXki8r6FDqDVuRIHGhhu9oLFpTOevBfeNaOgQgDphfAEA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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1cc81360208>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "hours=df.groupby('HoursOutside',as_index=False)['Respondent'].count().rename(columns={'Respondent': 'count1'})\n",
    "\n",
    "country=df.groupby(['HoursOutside','Country'], as_index=False)['Respondent'].count().rename(columns={'Respondent': 'count2'}).sort_values(ascending=False, by='count2').head(10)\n",
    "\n",
    "temp=hours.merge(country, how='left')\n",
    "temp1=temp.dropna()\n",
    "\n",
    "temp['ratio']=temp.count2/temp.count1\n",
    "\n",
    "sns.factorplot(y='ratio',x='HoursOutside', hue='Country',data=temp, aspect=4, kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It was shocking and sad to know that the developers in US spent their maximum time on computers and spend the least time outside. Majority of US developers spend over 12 hours on computer and leass than 30 minutes outside which can cause serious health issues and looks like a big probelm"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
